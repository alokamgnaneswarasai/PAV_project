To Keep in mind:
1) Method calls return reference to object is allocation sites;
2) Ignore all other type of method calls;
3) Ignore Exceptions control flow edges;
4) Ignore static class fields; (what happens if there is static class field)
5) Ignore non-pointer variables and non-pointer fields entirely (how are they represented in jimple?)
6) How is Switch statement represented?
7) What if a object reference is in the parameter?
8) What if array of object is given?
9) what if if(true) or if(false)?
10) what if rhs is a string? do we consider it be a object?
11) what if there is object fields?

- is the target of branch instruction always present?
- Switch statements?
- At-most only 2 successors?
- are hashset's okay? or the iteration order needs to fixed? use sortedset then.




# TODO 1 (sai): Tests cases for equals
# TODO 2 (sai): Transfer functions for assignment
# TODO 3 (khushit): parse jimple and convert to our Statement Class, update function calls with new00 when neccessary.




To Run 

- (Every time you open new terminal to run the program) export CLASSPATH=".:pkgs/soot-4.3.0-with-deps.jar"
- javac TestJoin.java PointsToLatticeElement.java LatticeElement.java
